:root {
    --widget-width: 150px;
    --widget-height: 150px;
    /* Modern color scheme */
    --bg-color: #1a1d21; /* Dark slate */
    --surface-color: #2c3037; /* Slightly lighter for containers */
    --primary-color: #4a90e2; /* A modern blue for accents */
    --success-color: #50c878; /* A modern green */
    --text-color: #f0f0f0; /* Off-white */
    --border-color: #444;
}

body {
    --gompei-count: 1;
    background-color: var(--bg-color);
    color: var(--text-color);
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    padding: 20px;
}

#store-container,
#widget-container {
    background-color: var(--surface-color);
    border-radius: 12px;
    padding: 15px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center; /* Center the items within the container */
    gap: 15px; /* Consistent spacing */
    margin-bottom: 20px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

#super-gompei {
    /* --sacrifice-hue is updated by JS on each sacrifice. Default is 0. */
    --sacrifice-hue: 0deg;
    /* The hue-rotate is now controlled by the sacrifice count, added to the base rotation. */
    filter: hue-rotate(calc(180deg + var(--sacrifice-hue))) sepia(calc(var(--gompei-count) * 10%)) saturate(calc(clamp(0, var(--gompei-count), 10) * 40% + 100%));
    transform: rotateX(180deg);
    transition: filter 0.4s ease-in-out; /* Smoothly transition the color change */
}

.store {
    background-color: var(--bg-color);
    text-align: center;
    cursor: pointer;
    color: var(--text-color);
    position: relative;
    border-radius: 8px;
    padding: 10px;
    border: 1px solid var(--border-color);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    width: var(--widget-width);
    box-sizing: border-box;
}

.store:not([broke]):hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
}

.store p {
    margin: 2px;
    position: relative;
}

.widget {
    display: flex;
    justify-content: center;
    align-items: center;

    width: var(--widget-width);
    height: var(--widget-height);

    cursor: pointer;

    overflow: hidden;
    color: var(--text-color);
    position: relative;
    border-radius: 8px;
    transition: filter 0.3s ease;
    box-shadow: inset 0 0 10px rgba(0,0,0,0.4);
}

.widget.dragging {
    opacity: 0.5;
    border-style: dashed;
}

.mega-widget {
    border: 3px solid #ffd700; /* Gold border for mega widgets */
    box-shadow: inset 0 0 10px rgba(0,0,0,0.4), 0 0 15px #ffd700; /* Add an outer glow */
}

.evolved-widget {
    border: 3px solid #9400D3; /* Dark Violet border for evolved widgets */
    box-shadow: inset 0 0 10px rgba(0,0,0,0.4), 0 0 20px #9400D3;
    animation: pulse-evolved 2s infinite ease-in-out;
}

.store[broke] {
    filter: brightness(0.5);
    cursor: not-allowed;
    opacity: 0.6;
}

.widget[harvesting] {
    filter: brightness(.6);
    cursor: default;
}

/* If the widget is an automatic widget */
.widget[auto="true"] {
    background-color: var(--success-color);
    border: 2px solid #80e2a2;
}

/* If the widget is a click widget */
.widget:not([auto="true"]) {
    background-color: var(--primary-color);
    border: 2px solid #7ab6f0;
}

.widget img {
    max-width: 100%;
    max-height: 100%;
}

.overlay-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 0; /* Start with 0 height; animation will override this. */
    background-color: rgba(0, 0, 0, 0.4);
    pointer-events: none;
    /* Ensure the overlay is above the image */
    z-index: 2;
}

.overlay-slide.is-animating {
    animation-name: cooldown;
    animation-duration: var(--cooldown-duration, 1s); /* Use the dynamic duration from JS */
    animation-iteration-count: 1; /* The animation should only run once per harvest */
    animation-timing-function: linear;
}
/* Floating point indicator */
.point {
    position: absolute;
    transform-origin: center;
    color: #fff;
    font-size: 1.5em;
    font-weight: bold;
    text-shadow: 0 0 5px var(--primary-color), 0 0 10px var(--primary-color);
    animation-name: point-float;
    animation-timing-function: ease-out;
    animation-duration: 1s;
    pointer-events: none;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    /* Ensure the score text is on top of everything */
    z-index: 3;
}

.center {
    text-align: center;
}


@keyframes point-float {
    0% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
    100% {
        opacity: 0;
        transform: translate(-50%, -150%) scale(1.2);
    }
}

@keyframes pulse-evolved {
    0% {
        box-shadow: inset 0 0 10px rgba(0,0,0,0.4), 0 0 20px #9400D3;
    }
    50% {
        box-shadow: inset 0 0 10px rgba(0,0,0,0.4), 0 0 30px #DA70D6; /* Orchid pulse color */
    }
    100% {
        box-shadow: inset 0 0 10px rgba(0,0,0,0.4), 0 0 20px #9400D3;
    }
}

@keyframes cooldown {
    0% {
        height: 100%;
    }

    100% {
        height: 0%;
    }
}